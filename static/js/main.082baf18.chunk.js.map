{"version":3,"sources":["components/WeatherLocationForm.js","utils.js","components/Icon.js","components/CurrentWeather.js","components/DailyCard.js","components/DailyWeather.js","components/ErrorMessage.js","api/AxiosOpenWeatherApi.js","components/App.js","index.js"],"names":["WeatherLocationInput","value","handleChange","handleSubmit","className","onSubmit","e","id","placeholder","type","onChange","title","UTCtoDate","utcDate","Date","getLocaleDate","localeDate","options","weekday","year","month","day","hour","minute","console","log","toLocaleString","getWeekday","toLocaleDateString","Icon","iconId","src","alt","CurrentWeather","weatherData","name","dt","weather","icon","description","Math","round","main","temp","temp_max","temp_min","feels_like","wind","speed","humidity","pressure","visibility","clouds","all","DailyCard","dailyForecast","max","min","DailyWeather","map","ErrroMessage","msg","instance","axios","create","baseURL","getCurrentWeather","city","lang","a","get","process","response","currentWeather","data","getDailyForecast","coords","lat","lon","dailyWeather","App","useState","setCity","currentWeatherData","setCurrentWeatherData","dailyForecastData","setDailyForecastData","error","setError","target","trim","preventDefault","length","then","apiData","coord","forecastData","catch","daily","slice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.082baf18.chunk.js","sourcesContent":["import \"./WeatherLocationForm.css\";\n\nfunction WeatherLocationInput({ value, handleChange, handleSubmit }) {\n  return (\n    <form className=\"weatherLocationForm\" onSubmit={(e) => handleSubmit(e)}>\n      <div className=\"weatherLocationForm__group\">\n        <input\n          id=\"locationInput\"\n          className=\"weatherLocationForm__input\"\n          placeholder=\"Wpisz miasto\"\n          type=\"text\"\n          value={value}\n          onChange={(e) => handleChange(e)}\n          title=\"Wpisz nazwę miasta\"\n        ></input>\n\n        <button\n          type=\"submit\"\n          value=\"submit\"\n          className=\"weatherLocationForm__button\"\n        >\n          Szukaj\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default WeatherLocationInput;\n","const UTCtoDate = (utcDate) => {\n  return new Date(utcDate * 1000);\n};\n\nexport const getLocaleDate = (utcDate, locale = \"pl-PL\") => {\n  const localeDate = UTCtoDate(utcDate);\n  const options = {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n  };\n  console.log(localeDate, utcDate);\n  return localeDate.toLocaleString(\"locale\", options);\n};\n\nexport const getWeekday = (utcDate, locale = \"pl-PL\") => {\n  const localeDate = UTCtoDate(utcDate);\n  const options = {\n    weekday: \"long\",\n  };\n  return localeDate.toLocaleDateString(\"locale\", options);\n};\n","import React from \"react\";\nimport \"./Icon.css\";\n\nfunction Icon({ iconId }) {\n  return (\n    <img\n      className=\"Icon\"\n      src={`http://openweathermap.org/img/wn/${iconId}@2x.png`}\n      alt=\"ikona pogody\"\n    ></img>\n  );\n}\n\nexport default Icon;\n","import React from \"react\";\nimport { getLocaleDate } from \"../utils\";\nimport Icon from \"./Icon\";\nimport \"./CurrentWeather.css\";\n\nfunction CurrentWeather({ weatherData }) {\n  return (\n    <div className=\"currentWeather\">\n      <h2 className=\"currentWeather__location\">{weatherData.name}</h2>\n      <p className=\"currentWeather__date\">{getLocaleDate(weatherData.dt)}</p>\n      <div className=\"currentWeather__data\">\n        <div className=\"currentWeather__main\">\n          <div className=\"currentWeather__description\">\n            <Icon iconId={weatherData.weather[0].icon} />\n            <p>{weatherData.weather[0].description}</p>\n          </div>\n          <div className=\"currentWeather__temperatures\">\n            <p>{Math.round(weatherData.main.temp)}&deg;</p>\n            <div className=\"currentWeather__minMaxTemp\">\n              <p className=\"currentWeather__maxTemp\">\n                {Math.round(weatherData.main.temp_max)}&deg; C\n              </p>\n              <p>{Math.round(weatherData.main.temp_min)}&deg; C</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"currentWeather__details\">\n          <div>\n            <p className=\"currentWeather__detailsTitle\">\n              Temperatura odczuwalna\n            </p>\n            <p className=\"currentWeather__detailsData\">\n              {weatherData.main.feels_like}&deg; C\n            </p>\n          </div>\n          <div>\n            <p className=\"currentWeather__detailsTitle\">Prędkość wiatru</p>\n            <p className=\"currentWeather__detailsData\">\n              {weatherData.wind.speed} m/s\n            </p>\n          </div>\n          <div>\n            <p className=\"currentWeather__detailsTitle\">Wilgotność</p>\n            <p className=\"currentWeather__detailsData\">\n              {weatherData.main.humidity} %\n            </p>\n          </div>\n          <div>\n            <p className=\"currentWeather__detailsTitle\">Ciśnienie</p>\n            <p className=\"currentWeather__detailsData\">\n              {weatherData.main.pressure} hPa\n            </p>\n          </div>\n          <div>\n            <p className=\"currentWeather__detailsTitle\">Widoczność</p>\n            <p className=\"currentWeather__detailsData\">\n              {weatherData.visibility} m\n            </p>\n          </div>\n          <div>\n            <p className=\"currentWeather__detailsTitle\">Zachmurzenie</p>\n            <p className=\"currentWeather__detailsData\">\n              {weatherData.clouds.all} %\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CurrentWeather;\n","import React from \"react\";\nimport Icon from \"./Icon\";\nimport { getWeekday } from \"../utils\";\nimport \"./DailyCard.css\";\n\nfunction DailyCard({ dailyForecast }) {\n  return (\n    <div className=\"DailyCard\" key={dailyForecast.dt}>\n      <p className=\"DailyCard__weekday\">{getWeekday(dailyForecast.dt)}</p>\n      <Icon iconId={dailyForecast.weather[0].icon} />\n      <p className=\"DailyCard_temp\">\n        <span>{Math.round(dailyForecast.temp.max)}&deg;C</span>\n        <span>{Math.round(dailyForecast.temp.min)}&deg;C</span>\n      </p>\n    </div>\n  );\n}\n\nexport default DailyCard;\n","import React from \"react\";\nimport DailyCard from \"./DailyCard\";\nimport \"./DailyWeather.css\";\n\nfunction DailyWeather({ weatherData }) {\n  return (\n    <div className=\"DailyWeather\">\n      {weatherData.map((dailyForecast) => (\n        <DailyCard dailyForecast={dailyForecast} />\n      ))}\n    </div>\n  );\n}\n\nexport default DailyWeather;\n","import React from \"react\";\nimport \"./ErrorMessage.css\";\n\nfunction ErrroMessage({ msg }) {\n  return (\n    <div className=\"ErrorMessage\">\n      <p>{msg}</p>\n    </div>\n  );\n}\n\nexport default ErrroMessage;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://api.openweathermap.org/data/2.5\",\n});\n\nexport const getCurrentWeather = async (city, lang) => {\n  const response = await instance.get(\n    `/weather?q=${city}&appid=${process.env.REACT_APP_OW_API_KEY}&units=metric&lang=${lang}`\n  );\n  const currentWeather = response.data;\n  return currentWeather;\n};\n\nexport const getDailyForecast = async (coords, lang) => {\n  const response = await instance.get(\n    `/onecall?lat=${coords.lat}&lon=${coords.lon}&appid=${process.env.REACT_APP_OW_API_KEY}&exclude=minutely,current&units=metric&lang=${lang}`\n  );\n  const dailyWeather = response.data;\n  return dailyWeather;\n};\n\n//data/2.5/onecall?lat={lat}&lon={lon}&exclude={part}&appid={API key}\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport WeatherLocationForm from \"./WeatherLocationForm\";\nimport CurrentWeather from \"./CurrentWeather\";\nimport DailyWeather from \"./DailyWeather\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport {\n  getCurrentWeather,\n  getDailyForecast,\n} from \"../api/AxiosOpenWeatherApi\";\n\nfunction App() {\n  const [city, setCity] = useState(\"\");\n  const [currentWeatherData, setCurrentWeatherData] = useState(null);\n  const [dailyForecastData, setDailyForecastData] = useState(null);\n  const [error, setError] = useState(false);\n\n  const handleInputChange = (e) => {\n    setCity(e.target.value.trim());\n    setError(false);\n  };\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    if (city.length === 0) {\n      return setError(true);\n    }\n    getCurrentWeather(city, \"pl\")\n      .then((apiData) => {\n        setCurrentWeatherData(apiData);\n        return apiData.coord;\n      })\n      .then((coord) => getDailyForecast(coord, \"pl\"))\n      .then((forecastData) => {\n        setDailyForecastData(forecastData);\n      })\n      .catch((error) => {\n        setError(true);\n        console.error(error.msg);\n      });\n  };\n  return (\n    <div className=\"App\">\n      <h1>Weather App</h1>\n      <WeatherLocationForm\n        value={city}\n        handleChange={handleInputChange}\n        handleSubmit={handleFormSubmit}\n      ></WeatherLocationForm>\n      {error ? (\n        <ErrorMessage msg=\"Proszę wpisz poprawną nazwę miasta!\" />\n      ) : null}\n      {currentWeatherData ? (\n        <CurrentWeather weatherData={currentWeatherData}></CurrentWeather>\n      ) : null}\n      {dailyForecastData ? (\n        <DailyWeather\n          weatherData={dailyForecastData.daily.slice(1)}\n        ></DailyWeather>\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}